#nullable enable
Microsoft.Identity.Web.DownstreamApi
Microsoft.Identity.Web.DownstreamApi.CallApiAsync(Microsoft.Identity.Abstractions.DownstreamApiOptions! downstreamApiOptions, System.Security.Claims.ClaimsPrincipal? user = null, System.Net.Http.HttpContent? content = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!
Microsoft.Identity.Web.DownstreamApi.CallApiAsync(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Net.Http.HttpContent? content = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!
Microsoft.Identity.Web.DownstreamApi.CallApiForAppAsync(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Net.Http.HttpContent? content = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!
Microsoft.Identity.Web.DownstreamApi.CallApiForAppAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.CallApiForAppAsync<TOutput>(string! serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.CallApiForUserAsync(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Net.Http.HttpContent? content = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!
Microsoft.Identity.Web.DownstreamApi.CallApiForUserAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.CallApiForUserAsync<TOutput>(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.CallApiInternalAsync(string? serviceName, Microsoft.Identity.Abstractions.DownstreamApiOptions! effectiveOptions, bool appToken, System.Net.Http.HttpContent? content = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage!>!
Microsoft.Identity.Web.DownstreamApi.DeleteForAppAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.DeleteForAppAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.DeleteForUserAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.DeleteForUserAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.DownstreamApi(Microsoft.Identity.Abstractions.IAuthorizationHeaderProvider! authorizationHeaderProvider, Microsoft.Extensions.Options.IOptionsMonitor<Microsoft.Identity.Abstractions.DownstreamApiOptions!>! namedDownstreamApiOptions, System.Net.Http.IHttpClientFactory! httpClientFactory, Microsoft.Extensions.Logging.ILogger<Microsoft.Identity.Web.DownstreamApi!>! logger) -> void
Microsoft.Identity.Web.DownstreamApi.GetForAppAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.GetForAppAsync<TOutput>(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.GetForUserAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.GetForUserAsync<TOutput>(string? serviceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.Logger
Microsoft.Identity.Web.DownstreamApi.MergeOptions(string? optionsInstanceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptions!>? calledApiOptionsOverride) -> Microsoft.Identity.Abstractions.DownstreamApiOptions!
Microsoft.Identity.Web.DownstreamApi.MergeOptions(string? optionsInstanceName, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? calledApiOptionsOverride, System.Net.Http.HttpMethod! httpMethod) -> Microsoft.Identity.Abstractions.DownstreamApiOptions!
Microsoft.Identity.Web.DownstreamApi.PostForAppAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.PostForAppAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.PostForUserAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.PostForUserAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.PutForAppAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.PutForAppAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.PutForUserAsync<TInput, TOutput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task<TOutput?>!
Microsoft.Identity.Web.DownstreamApi.PutForUserAsync<TInput>(string? serviceName, TInput input, System.Action<Microsoft.Identity.Abstractions.DownstreamApiOptionsReadOnlyHttpMethod!>? downstreamApiOptionsOverride = null, System.Security.Claims.ClaimsPrincipal? user = null, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken)) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApi.UpdateRequestAsync(System.Net.Http.HttpRequestMessage! httpRequestMessage, System.Net.Http.HttpContent? content, Microsoft.Identity.Abstractions.DownstreamApiOptions! effectiveOptions, bool appToken, System.Security.Claims.ClaimsPrincipal? user, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Microsoft.Identity.Web.DownstreamApiLoggingEventId
readonly Microsoft.Identity.Web.DownstreamApi._logger -> Microsoft.Extensions.Logging.ILogger<Microsoft.Identity.Web.DownstreamApi!>!
static Microsoft.Identity.Web.DownstreamApi.DeserializeOutputAsync<TOutput>(System.Net.Http.HttpResponseMessage! response, Microsoft.Identity.Abstractions.DownstreamApiOptions! effectiveOptions) -> System.Threading.Tasks.Task<TOutput?>!
static Microsoft.Identity.Web.DownstreamApi.Logger.HttpRequestError(Microsoft.Extensions.Logging.ILogger! logger, string! ServiceName, string! BaseUrl, string! RelativePath, System.Exception? ex) -> void
static Microsoft.Identity.Web.DownstreamApi.Logger.UnauthenticatedApiCall(Microsoft.Extensions.Logging.ILogger! logger, System.Exception? ex) -> void
static Microsoft.Identity.Web.DownstreamApi.SerializeInput<TInput>(TInput input, Microsoft.Identity.Abstractions.DownstreamApiOptions! effectiveOptions) -> System.Net.Http.HttpContent?
static Microsoft.Identity.Web.DownstreamApiExtensions.AddDownstreamApiWithLifetime(Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) -> void
static Microsoft.Identity.Web.DownstreamApiExtensions.RegisterDownstreamApi(Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> void
static readonly Microsoft.Identity.Web.DownstreamApiLoggingEventId.HttpRequestError -> Microsoft.Extensions.Logging.EventId
static readonly Microsoft.Identity.Web.DownstreamApiLoggingEventId.UnauthenticatedApiCall -> Microsoft.Extensions.Logging.EventId
