#template-install-dependencies.yaml
  
#install dotnet core

steps:
- task: UseDotNet@2
  displayName: 'Use .NET SDK 3.1'
  inputs:
    version: 3.1.x

- task: UseDotNet@2
  displayName: 'Use .NET SDK 6.0.x'
  inputs:
    version: 6.0.x

- task: UseDotNet@2
  displayName: 'Use .NET SDK 7.0.x'
  inputs:
    version: 7.0.x

- task: UseDotNet@2
  displayName: 'Use .NET SDK 8.0.x'
  inputs:
    version: 8.0.x

- task: UseDotNet@2
  displayName: 'Use .NET SDK 9.0.x'
  inputs:
    useGlobalJson: true

- task: UseDotNet@2
  displayName: 'Use .NET SDK 10.0.x preview'
  inputs:
    version: 10.0.x
    includePreviewVersions: true

# Run Nuget Tool Installer

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet latest version'

# Install all secrets needed from KeyVault onto the build machine.

- task: AzureKeyVault@2
  displayName: 'Azure Key Vault: msidlabs'
  inputs:
    azureSubscription: 'AuthSdkResourceManager'
    KeyVaultName: 'msidlabs'
    SecretsFilter: 'LabAuth'
    
- task: NuGetAuthenticate@1
  displayName: NuGet Authenticate

- powershell: |
   $kvSecretBytes = [System.Convert]::FromBase64String('$(LabAuth)')
   $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
   $certCollection.Import($kvSecretBytes, $null, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

   $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12)
   $pfxPath = '$(Build.SourcesDirectory)' + "\TestCert.pfx"
   [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

   Import-PfxCertificate -FilePath $pfxPath -CertStoreLocation Cert:\LocalMachine\My
   
  displayName: 'Install Keyvault Secrets'
