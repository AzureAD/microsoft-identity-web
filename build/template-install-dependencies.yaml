#template-install-dependencies.yaml

#install dotnet core

steps:
- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 3.1'
  inputs:
    version: 3.1.x   

- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 6'
  inputs:
    version: 6.0.x   

- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 7'
  inputs:
    version: 7.0.x   

- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 8'
  inputs:
    version: 8.x  

- task: UseDotNet@2
  displayName: 'Use .Net Core SDK 9'
  inputs:
    version: 9.0.100-rc.1.24452.12
    includePreviewVersions: true
  condition: eq(variables['TargetNet9'], 'True')

# Run Nuget Tool Installer

- task: NuGetToolInstaller@1
  displayName: 'Install NuGet latest version'

# Install all secrets needed from KeyVault onto the build machine.

- task: AzureKeyVault@2
  displayName: 'Azure Key Vault: msidlabs'
  inputs:
    azureSubscription: 'AuthSdkResourceManager'
    KeyVaultName: 'msidlabs'
    SecretsFilter: 'LabAuth'

- powershell: |
   $kvSecretBytes = [System.Convert]::FromBase64String('$(LabAuth)')
   $certCollection = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2Collection
   $certCollection.Import($kvSecretBytes, $null, [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::Exportable)

   $protectedCertificateBytes = $certCollection.Export([System.Security.Cryptography.X509Certificates.X509ContentType]::Pkcs12)
   $pfxPath = '$(Build.SourcesDirectory)' + "\TestCert.pfx"
   [System.IO.File]::WriteAllBytes($pfxPath, $protectedCertificateBytes)

   Import-PfxCertificate -FilePath $pfxPath -CertStoreLocation Cert:\LocalMachine\My
   
  displayName: 'Install Keyvault Secrets'
