# template-publish-packages-and-symbols.yaml
# Publishes all nuget packages and symbols to appropriate destinations.
# Publish any security analysis logs (e.g. TSA) and perform post-build cleanup

parameters:
  NugetPackagesWildcard: '$(Build.ArtifactStagingDirectory)\packages\*.nupkg'
  ArtifactPublishPath: '$(Build.ArtifactStagingDirectory)\packages'
  SymbolPublishWildcard: '**/bin/**/microsoft.identity.web.*'
  DropArtifactName: 'packages'

steps:

- task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
  displayName: 'Generation Task'
  inputs:
    BuildDropPath: '${{ parameters.ArtifactPublishPath }}'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: packages'
  inputs:
    PathtoPublish: '${{ parameters.ArtifactPublishPath }}'
    ArtifactName: '${{ parameters.DropArtifactName }}'

- task: NuGetCommand@2
  displayName: 'Publish packages to VSTS feed'
  inputs:
    command: push
    packagesToPush: '${{ parameters.NugetPackagesWildcard }}'
    publishVstsFeed: '46419298-b96c-437f-bd4c-12c8df7f868d'
    allowPackageConflicts: true
  continueOnError: true
  condition: eq(variables['PublishToVSTSFeed'], 'true')

- task: PublishSymbols@2
  displayName: 'Publish symbols'
  inputs:
    SearchPattern: '${{ parameters.SymbolPublishWildcard }}'
    IndexSources: false
    SymbolServerType: TeamServices
  condition: eq(variables['PublishSymbols'], 'true')

- task: securedevelopmentteam.vss-secure-development-tools.build-task-publishsecurityanalysislogs.PublishSecurityAnalysisLogs@3
  displayName: 'Publish Security Analysis Logs'

- task: securedevelopmentteam.vss-secure-development-tools.build-task-uploadtotsa.TSAUpload@2
  displayName: 'TSA upload to Codebase: Microsoft Identity Web .NET Stamp: Azure'
  condition: and(succeeded(), eq(variables['PipelineType'], 'Legacy'))
  inputs:
    GdnPublishTsaOnboard: false 
    GdnPublishTsaConfigFile: '$(Build.SourcesDirectory)/build/tsaConfig.json'
  continueOnError: true

- task: mspremier.PostBuildCleanup.PostBuildCleanup-task.PostBuildCleanup@3
  displayName: 'Clean Agent Directories'
